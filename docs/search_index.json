[["index.html", "Estadística para estudios ecológicos: Un enfoque práctico utilizando R Prefacio", " Estadística para estudios ecológicos: Un enfoque práctico utilizando R Dario D. Larrea Lucas J. Mina Matias I. Dufek Gerardo N. Valle Florencia M. Monti Areco Prefacio Aquí se encuentran los ejemplos usados en el libro. "],["capítulo-4-pruebas-de-hipótesis-estadísticas-en-estudios-ecológicos.html", "Capítulo 4: Pruebas de hipótesis estadísticas en estudios ecológicos Prueba de normalidad de Shapiro-Wilk Prueba de Levene Prueba t de Student ANOVA Regresión lineal MANOVA Prueba de Krustal-Wallis Prueba de coerrelación de Spearman Prueba Mann-Whitney U PERMANOVA Modelo lineal generalizado GLM", " Capítulo 4: Pruebas de hipótesis estadísticas en estudios ecológicos Prueba de normalidad de Shapiro-Wilk data(hormigas) resultado_shapiro &lt;- shapiro.test(hormigas$Taxa_S) resultado_shapiro ## ## Shapiro-Wilk normality test ## ## data: hormigas$Taxa_S ## W = 0.96155, p-value = 0.6319 qqnorm(hormigas$Taxa_S) qqline(hormigas$Taxa_S) Figura 1: Gráfico Q-Q (cuantil-cuantil) Prueba de Levene library(car) resultado_levene &lt;- leveneTest(Taxa_S ~ TRATAMIENTO, data = hormigas) resultado_levene ## Levene&#39;s Test for Homogeneity of Variance (center = median) ## Df F value Pr(&gt;F) ## group 2 2.1094 0.1559 ## 15 modelo &lt;- lm(Taxa_S ~ TRATAMIENTO, data = hormigas) plot(modelo, which = 1) Figura 2: Gráfico de residuos vs. ajustes Prueba t de Student grupo_1 &lt;- hormigas$Taxa_S[hormigas$TRATAMIENTO == &quot;ECB&quot;] grupo_2 &lt;- hormigas$Taxa_S[hormigas$TRATAMIENTO == &quot;ECD&quot;] resultado &lt;- t.test(grupo_1, grupo_2) resultado ## ## Welch Two Sample t-test ## ## data: grupo_1 and grupo_2 ## t = 3.3651, df = 8.6431, p-value = 0.008815 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## 3.181152 16.485515 ## sample estimates: ## mean of x mean of y ## 26.16667 16.33333 boxplot(hormigas$Taxa_S[hormigas$TRATAMIENTO == &quot;ECB&quot;], hormigas$Taxa_S[hormigas$TRATAMIENTO == &quot;ECD&quot;]) Figura 3: Diagrama de caja ANOVA modelo_anova &lt;- aov(Taxa_S ~ TRATAMIENTO, data = hormigas) summary(modelo_anova) ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## TRATAMIENTO 2 293.4 146.72 4.079 0.0385 * ## Residuals 15 539.5 35.97 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 posthoc &lt;- TukeyHSD(modelo_anova) posthoc ## Tukey multiple comparisons of means ## 95% family-wise confidence level ## ## Fit: aov(formula = Taxa_S ~ TRATAMIENTO, data = hormigas) ## ## $TRATAMIENTO ## diff lwr upr p adj ## ECD-ECB -9.833333 -18.827067 -0.8395992 0.0314203 ## ECI-ECB -5.833333 -14.827067 3.1604008 0.2431159 ## ECI-ECD 4.000000 -4.993734 12.9937342 0.4965952 barplot(tapply(hormigas$Taxa_S, hormigas$TRATAMIENTO, mean), names.arg = levels(hormigas$TRATAMIENTO), ylab = &quot;Media de respuesta&quot;, xlab = &quot;Tratamiento&quot;, col = &quot;lightblue&quot;) Figura 4: Diagrama de barras ANOVA Regresión lineal data(moscas) modelo &lt;- lm(Div_Shan ~ IHH, data = moscas) summary(modelo) ## ## Call: ## lm(formula = Div_Shan ~ IHH, data = moscas) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.57104 -0.07673 0.03868 0.10845 0.25210 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.321362 0.084217 15.69 2.11e-15 *** ## IHH -0.006498 0.002018 -3.22 0.00324 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.1822 on 28 degrees of freedom ## Multiple R-squared: 0.2702, Adjusted R-squared: 0.2441 ## F-statistic: 10.37 on 1 and 28 DF, p-value: 0.003241 plot( moscas$IHH, moscas$Div_Shan, xlab = &quot;Variable independiente&quot;, ylab = &quot;Variable dependiente&quot;, main = &quot;Regresión lineal&quot; ) abline(modelo, col = &quot;red&quot;) Figura 5: Gráfico regresión lineal MANOVA modelo_manova &lt;- manova(cbind(Taxa_S, D1) ~ TRATAMIENTO, data = hormigas) summary(modelo_manova) ## Df Pillai approx F num Df den Df Pr(&gt;F) ## TRATAMIENTO 2 0.385 1.7879 4 30 0.1573 ## Residuals 15 barplot(colMeans(hormigas[, c(&quot;Taxa_S&quot;, &quot;D1&quot;)]), names.arg = levels(hormigas$TRATAMIENTO), ylab = &quot;Media de variables dependientes&quot;, xlab = &quot;Variable independiente&quot;, col = &quot;lightblue&quot;) Figura 6: Gráfico resultados MANOVA Prueba de Krustal-Wallis resultado_kruskal &lt;- kruskal.test(Taxa_S ~ TRATAMIENTO, data = hormigas) resultado_kruskal ## ## Kruskal-Wallis rank sum test ## ## data: Taxa_S by TRATAMIENTO ## Kruskal-Wallis chi-squared = 6.3117, df = 2, p-value = 0.0426 library(dunn.test) posthoc &lt;- dunn.test(hormigas$Taxa_S, g = hormigas$TRATAMIENTO, method = &quot;bonferroni&quot;) ## Kruskal-Wallis rank sum test ## ## data: x and group ## Kruskal-Wallis chi-squared = 6.3117, df = 2, p-value = 0.04 ## ## ## Comparison of x by group ## (Bonferroni) ## Col Mean-| ## Row Mean | ECB ECD ## ---------+---------------------- ## ECD | 2.496428 ## | 0.0188* ## | ## ECI | 1.492430 -1.003998 ## | 0.2034 0.4731 ## ## alpha = 0.05 ## Reject Ho if p &lt;= alpha/2 Prueba de coerrelación de Spearman resultado_spearman &lt;- cor.test(moscas$Riqueza, moscas$IHH, method = &quot;spearman&quot;) resultado_spearman ## ## Spearman&#39;s rank correlation rho ## ## data: moscas$Riqueza and moscas$IHH ## S = 4934.1, p-value = 0.6076 ## alternative hypothesis: true rho is not equal to 0 ## sample estimates: ## rho ## -0.09768012 Prueba Mann-Whitney U ecb_vs_ecd &lt;- subset(hormigas, TRATAMIENTO %in% c(&quot;ECB&quot;, &quot;ECD&quot;)) resultado_mann_whitney &lt;- wilcox.test(Taxa_S ~ TRATAMIENTO, data = ecb_vs_ecd) resultado_mann_whitney ## ## Wilcoxon rank sum test with continuity correction ## ## data: Taxa_S by TRATAMIENTO ## W = 33.5, p-value = 0.01612 ## alternative hypothesis: true location shift is not equal to 0 PERMANOVA library(vegan) resultado_permanova &lt;- adonis(Taxa_S ~ TRATAMIENTO, data = hormigas, permutations = 999) resultado_permanova$aov.tab ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## TRATAMIENTO 2 0.15135 0.075674 3.4418 0.31456 0.052 . ## Residuals 15 0.32980 0.021987 0.68544 ## Total 17 0.48115 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Modelo lineal generalizado GLM modelo &lt;- glm(Taxa_S ~ TRATAMIENTO + BOSQUE, data = hormigas, family = poisson()) summary(modelo) ## ## Call: ## glm(formula = Taxa_S ~ TRATAMIENTO + BOSQUE, family = poisson(), ## data = hormigas) ## ## Coefficients: (2 not defined because of singularities) ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 3.21888 0.14142 22.761 &lt; 2e-16 *** ## TRATAMIENTOECD -0.47804 0.22860 -2.091 0.03652 * ## TRATAMIENTOECI 0.03922 0.19807 0.198 0.84303 ## BOSQUEESC 0.21511 0.19008 1.132 0.25776 ## BOSQUEESQ -0.77319 0.24677 -3.133 0.00173 ** ## BOSQUEPAN 0.25489 0.23929 1.065 0.28678 ## BOSQUEPCI -0.12260 0.20241 -0.606 0.54471 ## BOSQUEPCII -0.10536 0.20548 -0.513 0.60812 ## BOSQUEPIN -0.13815 0.26324 -0.525 0.59972 ## BOSQUERCH NA NA NA NA ## BOSQUEVED NA NA NA NA ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for poisson family taken to be 1) ## ## Null deviance: 40.3125 on 17 degrees of freedom ## Residual deviance: 9.2478 on 9 degrees of freedom ## AIC: 114.23 ## ## Number of Fisher Scoring iterations: 4 plot(modelo, which = 1) plot(modelo, which = 2) "],["capítulo-5-índices-para-medir-la-diversidad-biológica.html", "Capítulo 5: Índices para medir la diversidad biológica Diversidad alfa Diversidad beta", " Capítulo 5: Índices para medir la diversidad biológica Diversidad alfa Riqueza de especies library(datosEcoR) library(BiodiversityR) data(abundancia) data(ambiente) specpool(abundancia$localidad, ambiente$estado_conservacion) ## Species chao chao.se jack1 jack1.se jack2 boot boot.se ## ECB 78 138.08889 24.05296 112.66667 25.51688 127.50000 93.96296 12.105957 ## ECD 53 96.75758 20.47861 78.33333 18.31818 89.16667 64.66667 8.576454 ## ECI 57 110.48148 25.93010 82.33333 19.27578 93.50000 68.59259 9.373956 ## n ## ECB 3 ## ECD 3 ## ECI 3 Índices basados en dominancia data(abundancia) D &lt;- diversityresult(abundancia$conservacion, index = &quot;Simpson&quot;, method = &quot;each site&quot;) B &lt;- diversityresult(abundancia$conservacion, index = &quot;Berger&quot;, method = &quot;each site&quot;) iD &lt;- diversityresult(abundancia$conservacion, index = &quot;inverseSimpson&quot;, method = &quot;each site&quot;) indices_dom &lt;- data.frame(D, iD, B) knitr::kable(indices_dom, col.names = c(&quot;Simpson&quot;, &quot;Inverso de Simpson&quot;, &quot;Berger&quot;)) Simpson Inverso de Simpson Berger ECB 0.93105021 14.5033077 0.12946191 ECI 0.87280776 7.8621150 0.27067995 ECD 0.83436931 6.0375284 0.34324554 Índices basados en equidad H &lt;- diversityresult(abundancia$conservacion, index = &quot;Shannon&quot;, method = &quot;each site&quot;) JP &lt;- H/log(specnumber(abundancia$conservacion)) indices_equi &lt;- data.frame(H, JP) knitr::kable(indices_equi, col.names = c(&quot;Shannon&quot;, &quot;Pielou&quot;)) Shannon Pielou ECB 3.0779495 0.70648501 ECI 2.6244421 0.64912413 ECD 2.5077268 0.63162278 Diversidad beta library(betapart) incidencia &lt;- ifelse(abundancia$conservacion &gt; 0, 1, 0) betapart.core(incidencia) ## $data ## Acanthoponera mucronata Acromyrmex sp1 Acromyrmex sp2 Acromyrmex sp3 ## ECB 1 1 1 1 ## ECI 1 1 0 0 ## ECD 0 1 0 0 ## Anochetus cf. neglectus Anochetus neglectus Apterostigma pilosum ## ECB 1 1 1 ## ECI 0 1 1 ## ECD 0 0 0 ## Brachymyrmex sp1 Camponotus blandus Camponotus cf. mus ## ECB 1 1 1 ## ECI 1 0 1 ## ECD 1 0 1 ## Camponotus cf. substitutus Camponotus cordiceps  Camponotus punctulatus ## ECB 1 1 1 ## ECI 1 0 0 ## ECD 0 0 0 ## Camponotus rufipes Camponotus sanctaefidei Camponotus sericeiventris ## ECB 1 1 1 ## ECI 0 0 0 ## ECD 1 1 0 ## Camponotus sp1 Camponotus sp2 Camponotus sp3 Camponotus sp5 ## ECB 1 1 1 1 ## ECI 1 0 0 0 ## ECD 1 0 1 0 ## Cephalotes clypeatus Cephalotes incertus Cephalotes minutus ## ECB 1 1 1 ## ECI 0 0 0 ## ECD 0 0 0 ## Cephalotes pilosus Cephalotes sp1 Cephalotes sp2 Cephalotes sp3 ## ECB 1 1 1 1 ## ECI 0 1 1 0 ## ECD 0 1 0 0 ## Crematogaster sp1 Cyphomyrmex rimosus Cyphomyrmex sp1 Dolichoderus sp1 ## ECB 1 1 1 1 ## ECI 1 1 1 0 ## ECD 1 1 1 1 ## Dorymyrmex thoracicus Eciton vagans Ectatomma edentatum Ectatomma sp1 ## ECB 1 1 1 1 ## ECI 0 0 1 0 ## ECD 0 0 1 0 ## Gnamptogenys moelleri Gnamptogenys sp1 Gnamptogenys striatula ## ECB 1 1 1 ## ECI 1 0 0 ## ECD 1 0 0 ## Hypoponera sp1 Hypoponera sp2 Hypoponera sp3 Hypoponera sp4 ## ECB 1 1 1 1 ## ECI 1 1 1 1 ## ECD 1 1 0 1 ## Labidus praedator Linepithema humile Linepithema sp1 Neoponera cf. villosa ## ECB 1 1 1 1 ## ECI 1 1 1 0 ## ECD 0 1 1 1 ## Nesomyrmex spininodis Nylanderia cf. silvestrii Nylanderia fulva ## ECB 1 1 1 ## ECI 1 0 1 ## ECD 1 0 1 ## Nylanderia silvestrii Nylanderia sp3 Octostruma balzani ## ECB 1 1 1 ## ECI 0 0 1 ## ECD 1 0 1 ## Odontomachus chelifer Odontomachus haematodus Pheidole cf. capillata ## ECB 1 1 1 ## ECI 0 0 0 ## ECD 0 0 0 ## Pheidole cf. synarmata Pheidole radoszkowskii Pheidole sp1 Pheidole sp2 ## ECB 1 1 1 1 ## ECI 0 1 1 1 ## ECD 0 0 1 1 ## Pheidole sp3 Prionopelta punctulata Procryptocerus cf. goeldii ## ECB 1 1 1 ## ECI 0 1 0 ## ECD 1 0 0 ## Procryptocerus goeldii Pseudomyrmex cf. gracilis Pseudomyrmex gracilis ## ECB 1 1 1 ## ECI 0 1 0 ## ECD 0 1 0 ## Pseudomyrmex pallidus Pseudomyrmex phyllophilus Pseudomyrmex sp1 ## ECB 1 1 1 ## ECI 0 0 1 ## ECD 0 0 1 ## Pseudomyrmex sp2 Pseudomyrmex sp3 Solenopsis sp1 Solenopsis sp2 ## ECB 1 1 1 1 ## ECI 1 1 1 1 ## ECD 0 0 1 1 ## Strumigenys cf. eggersi Strumigenys cf. silvestrii Strumigenys eggersi ## ECB 1 1 1 ## ECI 0 0 1 ## ECD 0 0 1 ## Strumigenys louisianae Trachymyrmex sp1 Wasmannia auropunctata ## ECB 1 1 1 ## ECI 0 1 1 ## ECD 0 0 1 ## Camponotus sp10 Camponotus sp11 Camponotus sp12 Camponotus sp4 ## ECB 0 0 0 0 ## ECI 0 0 0 0 ## ECD 1 1 1 1 ## Camponotus sp8 Camponotus sp9 Camponotus substitutus Crematogaster sp2 ## ECB 0 0 0 0 ## ECI 0 0 0 1 ## ECD 1 1 1 1 ## Crematogaster sp3 Dolichoderus bispinosus Dorymyrmex sp3 Ectatomma brunneum ## ECB 0 0 0 0 ## ECI 0 0 0 1 ## ECD 1 1 1 1 ## Ectatomma opaciventre Gnamptogenys sulcata Hypoponera trigona ## ECB 0 0 0 ## ECI 0 0 0 ## ECD 1 1 1 ## Linepithema sp2 Myrmelachista sp1 Procryptocerus hylaeus ## ECB 0 0 0 ## ECI 0 0 0 ## ECD 1 1 1 ## Pseudomyrmex cf. denticollis Rogeria scobinata Acromyrmex cf. lundii ## ECB 0 0 0 ## ECI 0 1 1 ## ECD 1 1 0 ## Brachymyrmex sp2 Cephalotes cf. incertus Cephalotes sp4 Dorymyrmex sp1 ## ECB 0 0 0 0 ## ECI 1 1 1 1 ## ECD 0 0 0 0 ## Eciton sp1 Hypoponera foreli Labidus sp1 Leptogenys pusilla ## ECB 0 0 0 0 ## ECI 1 1 1 1 ## ECD 0 0 0 0 ## Megalomyrmex silvestrii Nesomyrmex vicinus Pheidole sp4 Platythyrea exigua ## ECB 0 0 0 0 ## ECI 1 1 1 1 ## ECD 0 0 0 0 ## Strumigenys dyseides Strumigenys elongata Strumigenys lilloana ## ECB 0 0 0 ## ECI 1 1 1 ## ECD 0 0 0 ## ## $sumSi ## [1] 188 ## ## $St ## [1] 114 ## ## $a ## [1] 74 ## ## $shared ## ECB ECI ECD ## ECB 78 38 33 ## ECI 38 57 29 ## ECD 33 29 53 ## ## $not.shared ## ECB ECI ECD ## ECB 0 19 20 ## ECI 40 0 24 ## ECD 45 28 0 ## ## $sum.not.shared ## ECB ECI ECD ## ECB 0 59 65 ## ECI 59 0 52 ## ECD 65 52 0 ## ## $max.not.shared ## ECB ECI ECD ## ECB 0 40 45 ## ECI 40 0 28 ## ECD 45 28 0 ## ## $min.not.shared ## ECB ECI ECD ## ECB 0 19 20 ## ECI 19 0 24 ## ECD 20 24 0 ## ## attr(,&quot;class&quot;) ## [1] &quot;betapart&quot; Beta partición en base Jaccard multi_jac &lt;- beta.multi(incidencia, index.family = &quot;jac&quot;) multi_jac ## $beta.JTU ## [1] 0.63 ## ## $beta.JNE ## [1] 0.074 ## ## $beta.JAC ## [1] 0.704 dist_jac &lt;- beta.pair(incidencia, index.family = &quot;jac&quot;) dist_jac ## $beta.jtu ## ECB ECI ## ECI 0.50000000 ## ECD 0.54794521 0.62337662 ## ## $beta.jne ## ECB ECI ## ECI 0.108247423 ## ECD 0.115320101 0.018598685 ## ## $beta.jac ## ECB ECI ## ECI 0.60824742 ## ECD 0.66326531 0.64197531 Beta partición en base Sørensen multi_sor &lt;- beta.multi(incidencia, index.family = &quot;sor&quot;) multi_sor ## $beta.SIM ## [1] 0.45985401 ## ## $beta.SNE ## [1] 0.083355862 ## ## $beta.SOR ## [1] 0.54320988 dist_sor &lt;- beta.pair(incidencia, index.family = &quot;sor&quot;) multi_sor ## $beta.SIM ## [1] 0.45985401 ## ## $beta.SNE ## [1] 0.083355862 ## ## $beta.SOR ## [1] 0.54320988 "],["capítulo-6-otras-formas-de-medir-la-biodiversidad.html", "Capítulo 6: Otras formas de medir la biodiversidad Diversidad taxonómica", " Capítulo 6: Otras formas de medir la biodiversidad Diversidad taxonómica library(BiodiversityR) library(ggplot2) library(ggrepel) data(abundancia) data(taxa) dist_taxa &lt;- taxa2dist(taxa) div_taxonomica &lt;- taxondive(abundancia$localidad, dist_taxa) div_taxonomica ## Species Delta Delta* Lambda+ Delta+ S Delta+ ## Estancia El Bagual 33.0000 73.7859 88.3378 414.2992 87.5000 2887.50 ## Estancia Quintana 18.0000 80.6061 89.7032 449.5600 88.3987 1591.18 ## Estancia San Carlos 48.0000 64.4033 73.4790 494.8580 88.7633 4260.64 ## Pampa del Indio 19.0000 72.9851 90.5276 352.8009 90.3509 1716.67 ## Parque Nacional Chaco I 35.0000 76.6376 94.5511 358.1491 89.4958 3132.35 ## Parque Nacional Chaco II 31.0000 71.5049 94.0305 356.9892 90.0000 2790.00 ## Puerto Antequera 28.0000 58.2838 75.4840 756.7196 83.2672 2331.48 ## Reserva los Chaguares 36.0000 83.7972 92.0473 511.5725 86.1508 3101.43 ## Vedia 25.0000 82.5026 91.0767 456.2431 87.4167 2185.42 ## Expected 84.0934 82.3212 89.0467 div_taxonomica &lt;- as.data.frame( do.call(cbind, div_taxonomica) ) ggplot(div_taxonomica, aes(x = Species, y = Dplus)) + geom_point() + ylab(&quot;Δ+&quot;) + xlab(&quot;Riqueza&quot;) + geom_hline(aes(yintercept = EDplus), linetype = &quot;dotted&quot;) + geom_ribbon(aes(ymax = EDplus + sd.Dplus * 2, ymin = EDplus - sd.Dplus * 2), fill = NA, color = &quot;black&quot;) + geom_text_repel(aes(label = row.names(div_taxonomica)), size = 3.5, color = &quot;blue3&quot;) + theme_classic() Figura 7: Gráfico diversidad taxonómica "],["capítulo-7-estudio-de-la-estructura-de-la-comunidad.html", "Capítulo 7: Estudio de la estructura de la comunidad Curvas de Whittaker Curvas de acumulación Curvas de rarefacción NMDS (Escalado multi-dimensional no métrico)", " Capítulo 7: Estudio de la estructura de la comunidad Curvas de Whittaker library(BiodiversityR) library(ggplot2) library(ggrepel) # ---- Rangos de abundancia ---- rank_abundancia &lt;- rankabundance(abundancia$localidad) rankabunplot(rank_abundancia, scale = &quot;abundance&quot;) Figura 8: Gráfico rango-abundancia de todos los sitios ambiente$estado_conservacion &lt;- factor(ambiente$estado_conservacion) rank_abundancia_amb &lt;- rankabuncomp( abundancia$localidad, y = ambiente, factor = &quot;estado_conservacion&quot;, legend = FALSE ) # Marcamos especies únicas especies_unicas &lt;- lapply( unique(levels(ambiente$estado_conservacion)), function(group) { setdiff(subset(rank_abundancia_amb, Grouping == group)$species, subset(rank_abundancia_amb, Grouping != group)$species) } ) especies_unicas &lt;- unlist(especies_unicas) rank_abundancia_amb$unique &lt;- ifelse( rank_abundancia_amb$species %in% especies_unicas, TRUE, FALSE ) curva_whittaker &lt;- function(x, group, scale, color, mark.unique = FALSE) { if (&quot;unique&quot; %in% names(x)) { unique_num &lt;- nrow( subset(x, Grouping == group &amp; unique == TRUE) ) } label &lt;- sprintf(&quot;%s especies únicas&quot;, unique_num) xmax &lt;- max(x[[&quot;rank&quot;]]) ymax &lt;- max(x[[scale]]) plot &lt;- ggplot(x, aes(x = rank, y = .data[[scale]])) + coord_cartesian( xlim = c(0, xmax), ylim = c(0, ymax) ) + geom_point( data = subset(x, Grouping == group), size = 3, shape = 1, color = color ) + scale_shape_manual( name = NULL, breaks = c(&quot;unique&quot;), label = c(label), values = c(19) ) + geom_line( data = subset(x, Grouping == group), color = color ) + geom_text_repel( data = subset(x, Grouping == group &amp; labelit == TRUE), aes(label = species), hjust = 0, nudge_x = 3, size = 3 ) + theme_classic() if (mark.unique) { plot &lt;- plot + geom_point( data = subset(x, Grouping == group &amp; unique == TRUE), aes(shape = &quot;unique&quot;), color = color, size = 3, ) + theme(legend.position = c(.7, .5)) } return(plot) } curva_ecb &lt;- curva_whittaker(rank_abundancia_amb, &quot;ECB&quot;, &quot;abundance&quot;, &quot;darkgreen&quot;, mark.unique = TRUE) curva_eci &lt;- curva_whittaker(rank_abundancia_amb, &quot;ECI&quot;, &quot;abundance&quot;, &quot;orange&quot;, mark.unique = TRUE) curva_ecd &lt;- curva_whittaker(rank_abundancia_amb, &quot;ECD&quot;, &quot;abundance&quot;, &quot;red&quot;, mark.unique = TRUE) curva_ecb curva_eci curva_ecd Figura 9: Curvas de Whittaker para cada estado de conservación. ggplot(rank_abundancia_amb, aes(x = rank, y = abundance, color = Grouping)) + geom_line() + geom_point(size = 2.5) + labs(color = &quot;&quot;, shape = &quot;&quot;) + scale_color_manual(breaks = c(&quot;ECB&quot;, &quot;ECI&quot;, &quot;ECD&quot;), values = c(&quot;darkgreen&quot;, &quot;orange&quot;, &quot;red&quot;))+ theme_classic() + theme(legend.position = &quot;top&quot;) Figura 10: Gráfico con curvas de Whittaker para cada ambiente Curvas de acumulación # ---- Librerias ---- library(BiodiversityR) library(ggplot2) data(abundancia) # ---- Curva de acumulación ---- curva &lt;- specaccum(abundancia$localidad) curva ## Species Accumulation Curve ## Accumulation method: exact ## Call: specaccum(comm = abundancia$localidad) ## ## ## Sites 1.000000 2.000000 3.000000 4.000000 5.000000 6.000000 7.000000 ## Richness 30.333333 48.472222 62.059524 73.238095 82.928571 91.619048 99.583333 ## sd 8.743251 9.492551 9.604422 9.332636 8.766846 7.874094 6.490979 ## ## Sites 8.000000 9 ## Richness 107.000000 114 ## sd 4.371626 0 datos_sp &lt;- data.frame( Sitios = curva$sites, Riqueza = curva$richness, SD = curva$sd ) ggplot(datos_sp, aes(x = Sitios, y = Riqueza)) + geom_ribbon(aes(ymin = Riqueza - SD, ymax = Riqueza + SD), fill = &quot;grey90&quot;) + scale_x_continuous(breaks = datos_sp$Sitios) + geom_line(color = &quot;blue&quot;) + theme_classic() Figura 11: Curva de acumulación Curvas de rarefacción library(iNEXT) data(abundancia) data(incidencia_raw) inext_abundancia &lt;- iNEXT(abundancia$sp_by_ec, q = c(0, 1, 2), datatype = &quot;abundance&quot;) inext_abundancia ## Compare 3 assemblages with Hill number order q = 0, 1, 2. ## $class: iNEXT ## ## $DataInfo: basic data information ## Assemblage n S.obs SC f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 ## 1 ECB 1877 78 0.9856 27 11 7 2 1 2 1 1 0 0 ## 2 ECI 2309 57 0.9952 11 8 1 4 4 3 1 1 3 0 ## 3 ECD 1177 53 0.9864 16 8 3 2 1 3 0 2 0 0 ## ## $iNextEst: diversity estimates with rarefied and extrapolated samples. ## $size_based (LCL and UCL are obtained for fixed size.) ## ## Assemblage m Method Order.q qD qD.LCL qD.UCL ## 1 ECB 1 Rarefaction 0 1.0000000 1.0000000 1.0000000 ## 10 ECB 938 Rarefaction 0 60.6672822 56.1608801 65.1736843 ## 20 ECB 1877 Observed 0 78.0000000 70.8378214 85.1621786 ## 30 ECB 2766 Extrapolation 0 88.6065123 78.6412914 98.5717332 ## 40 ECB 3754 Extrapolation 0 96.4601241 82.8316487 110.0885994 ## 41 ECB 1 Rarefaction 1 1.0000000 1.0000000 1.0000000 ## 50 ECB 938 Rarefaction 1 21.1690611 20.0679683 22.2701538 ## 60 ECB 1877 Observed 1 21.7138324 20.5589492 22.8687157 ## 70 ECB 2766 Extrapolation 1 21.9558663 20.7756206 23.1361119 ## 80 ECB 3754 Extrapolation 1 22.1285186 20.9289264 23.3281109 ## 81 ECB 1 Rarefaction 2 1.0000000 1.0000000 1.0000000 ## 90 ECB 938 Rarefaction 2 14.3995503 13.7134380 15.0856627 ## 100 ECB 1877 Observed 2 14.5033077 13.8069569 15.1996585 ## 110 ECB 2766 Extrapolation 2 14.5369379 13.8372525 15.2366234 ## 120 ECB 3754 Extrapolation 2 14.5556931 13.8541445 15.2572417 ## 121 ECI 1 Rarefaction 0 1.0000000 1.0000000 1.0000000 ## 130 ECI 1154 Rarefaction 0 48.9327227 46.3801025 51.4853430 ## 140 ECI 2309 Observed 0 57.0000000 53.1089781 60.8910219 ## 150 ECI 3403 Extrapolation 0 60.7648251 55.3931795 66.1364706 ## 160 ECI 4618 Extrapolation 0 62.7944002 55.6383757 69.9504246 ## 161 ECI 1 Rarefaction 1 1.0000000 1.0000000 1.0000000 ## 170 ECI 1154 Rarefaction 1 13.6001420 12.9357662 14.2645178 ## 180 ECI 2309 Observed 1 13.7968750 13.1235716 14.4701785 ## 190 ECI 3403 Extrapolation 1 13.8759313 13.1996243 14.5522384 ## 200 ECI 4618 Extrapolation 1 13.9290468 13.2510728 14.6070208 ## 201 ECI 1 Rarefaction 2 1.0000000 1.0000000 1.0000000 ## 210 ECI 1154 Rarefaction 2 7.8387886 7.3476698 8.3299074 ## 220 ECI 2309 Observed 2 7.8621150 7.3678740 8.3563560 ## 230 ECI 3403 Extrapolation 2 7.8696370 7.3743871 8.3648868 ## 240 ECI 4618 Extrapolation 2 7.8738202 7.3780088 8.3696315 ## 241 ECD 1 Rarefaction 0 1.0000000 1.0000000 1.0000000 ## 250 ECD 588 Rarefaction 0 42.4057172 38.3115399 46.4998945 ## 260 ECD 1177 Observed 0 53.0000000 47.2879677 58.7120323 ## 270 ECD 1735 Extrapolation 0 59.0376197 51.5169284 66.5583110 ## 280 ECD 2354 Extrapolation 0 63.1078352 52.8373986 73.3782717 ## 281 ECD 1 Rarefaction 1 1.0000000 1.0000000 1.0000000 ## 290 ECD 588 Rarefaction 1 11.9485804 10.9876833 12.9094774 ## 300 ECD 1177 Observed 1 12.2769906 11.2735346 13.2804467 ## 310 ECD 1735 Extrapolation 1 12.4188866 11.3971170 13.4406562 ## 320 ECD 2354 Extrapolation 1 12.5176593 11.4817427 13.5535758 ## 321 ECD 1 Rarefaction 2 1.0000000 1.0000000 1.0000000 ## 330 ECD 588 Rarefaction 2 6.0117327 5.5430775 6.4803878 ## 340 ECD 1177 Observed 2 6.0375284 5.5644343 6.5106224 ## 350 ECD 1735 Extrapolation 2 6.0458576 5.5713257 6.5203894 ## 360 ECD 2354 Extrapolation 2 6.0504874 5.5751554 6.5258193 ## SC SC.LCL SC.UCL ## 1 0.068453493 0.065098009 0.071808978 ## 10 0.975967440 0.972218828 0.979716053 ## 20 0.985621589 0.981382985 0.989860193 ## 30 0.990226382 0.985318924 0.995133839 ## 40 0.993636009 0.988867065 0.998404953 ## 41 0.068453493 0.065098009 0.071808978 ## 50 0.975967440 0.972218828 0.979716053 ## 60 0.985621589 0.981382985 0.989860193 ## 70 0.990226382 0.985318924 0.995133839 ## 80 0.993636009 0.988867065 0.998404953 ## 81 0.068453493 0.065098009 0.071808978 ## 90 0.975967440 0.972218828 0.979716053 ## 100 0.985621589 0.981382985 0.989860193 ## 110 0.990226382 0.985318924 0.995133839 ## 120 0.993636009 0.988867065 0.998404953 ## 121 0.126814072 0.118693947 0.134934197 ## 130 0.989675741 0.987539562 0.991811920 ## 140 0.995239033 0.993164876 0.997313191 ## 150 0.997610203 0.995442653 0.999777754 ## 160 0.998888475 0.996972256 1.000000000 ## 161 0.126814072 0.118693947 0.134934197 ## 170 0.989675741 0.987539562 0.991811920 ## 180 0.995239033 0.993164876 0.997313191 ## 190 0.997610203 0.995442653 0.999777754 ## 200 0.998888475 0.996972256 1.000000000 ## 201 0.126814072 0.118693947 0.134934197 ## 210 0.989675741 0.987539562 0.991811920 ## 220 0.995239033 0.993164876 0.997313191 ## 230 0.997610203 0.995442653 0.999777754 ## 240 0.998888475 0.996972256 1.000000000 ## 241 0.164921194 0.151896211 0.177946176 ## 250 0.975995410 0.971205714 0.980785105 ## 260 0.986417667 0.981680111 0.991155222 ## 270 0.991547335 0.985554355 0.997540316 ## 280 0.995005462 0.989023353 1.000000000 ## 281 0.164921194 0.151896211 0.177946176 ## 290 0.975995410 0.971205714 0.980785105 ## 300 0.986417667 0.981680111 0.991155222 ## 310 0.991547335 0.985554355 0.997540316 ## 320 0.995005462 0.989023353 1.000000000 ## 321 0.164921194 0.151896211 0.177946176 ## 330 0.975995410 0.971205714 0.980785105 ## 340 0.986417667 0.981680111 0.991155222 ## 350 0.991547335 0.985554355 0.997540316 ## 360 0.995005462 0.989023353 1.000000000 ## ## NOTE: The above output only shows five estimates for each assemblage; call iNEXT.object$iNextEst$size_based to view complete output. ## ## $coverage_based (LCL and UCL are obtained for fixed coverage; interval length is wider due to varying size in bootstraps.) ## ## Assemblage SC m Method Order.q qD qD.LCL ## 1 ECB 0.068454056 1 Rarefaction 0 1.0000080 0.97534139 ## 10 ECB 0.975967440 938 Rarefaction 0 60.6672820 52.27052379 ## 20 ECB 0.985621589 1877 Observed 0 78.0000000 62.66090370 ## 30 ECB 0.990226382 2766 Extrapolation 0 88.6065123 66.86730534 ## 40 ECB 0.993636009 3754 Extrapolation 0 96.4601241 69.34736661 ## 41 ECB 0.068454056 1 Rarefaction 1 1.0000078 0.97595881 ## 50 ECB 0.975967440 938 Rarefaction 1 21.1690610 19.98336517 ## 60 ECB 0.985621589 1877 Observed 1 21.7138324 20.50050676 ## 70 ECB 0.990226382 2766 Extrapolation 1 21.9558663 20.71862517 ## 80 ECB 0.993636009 3754 Extrapolation 1 22.1285186 20.87450526 ## 81 ECB 0.068454056 1 Rarefaction 2 1.0000075 0.97686512 ## 90 ECB 0.975967440 938 Rarefaction 2 14.3995503 13.70756959 ## 100 ECB 0.985621589 1877 Observed 2 14.5033077 13.80425118 ## 110 ECB 0.990226382 2766 Extrapolation 2 14.5369379 13.83382610 ## 120 ECB 0.993636009 3754 Extrapolation 2 14.5556931 13.85044524 ## 121 ECI 0.126814072 1 Rarefaction 0 1.0000000 0.96775412 ## 130 ECI 0.989675741 1154 Rarefaction 0 48.9327225 44.95662905 ## 140 ECI 0.995239033 2309 Observed 0 57.0000000 49.72845324 ## 150 ECI 0.997610203 3403 Extrapolation 0 60.7648251 49.42802512 ## 160 ECI 0.998888475 4618 Extrapolation 0 62.7944002 48.63941218 ## 161 ECI 0.126814072 1 Rarefaction 1 1.0000000 0.96922166 ## 170 ECI 0.989675741 1154 Rarefaction 1 13.6001420 12.94743252 ## 180 ECI 0.995239033 2309 Observed 1 13.7968750 13.13253382 ## 190 ECI 0.997610203 3403 Extrapolation 1 13.8759313 13.20768248 ## 200 ECI 0.998888475 4618 Extrapolation 1 13.9290468 13.25566470 ## 201 ECI 0.126814072 1 Rarefaction 2 1.0000000 0.97124301 ## 210 ECI 0.989675741 1154 Rarefaction 2 7.8387886 7.34922332 ## 220 ECI 0.995239033 2309 Observed 2 7.8621150 7.36896877 ## 230 ECI 0.997610203 3403 Extrapolation 2 7.8696370 7.37497399 ## 240 ECI 0.998888475 4618 Extrapolation 2 7.8738202 7.37835581 ## 241 ECD 0.164921194 1 Rarefaction 0 1.0000000 0.95366006 ## 250 ECD 0.975995410 588 Rarefaction 0 42.4057177 35.84197489 ## 260 ECD 0.986417667 1177 Observed 0 53.0000000 42.37855347 ## 270 ECD 0.991547335 1735 Extrapolation 0 59.0376197 36.58033278 ## 280 ECD 0.995005462 2354 Extrapolation 0 63.1078352 31.17786256 ## 281 ECD 0.164921194 1 Rarefaction 1 1.0000000 0.95632715 ## 290 ECD 0.975995410 588 Rarefaction 1 11.9485804 10.94595642 ## 300 ECD 0.986417667 1177 Observed 1 12.2769906 11.24221170 ## 310 ECD 0.991547335 1735 Extrapolation 1 12.4188866 11.34718255 ## 320 ECD 0.995005462 2354 Extrapolation 1 12.5176593 11.43814260 ## 321 ECD 0.164921194 1 Rarefaction 2 1.0000000 0.95986698 ## 330 ECD 0.975995410 588 Rarefaction 2 6.0117327 5.54371872 ## 340 ECD 0.986417667 1177 Observed 2 6.0375284 5.56496505 ## 350 ECD 0.991547335 1735 Extrapolation 2 6.0458576 5.57153645 ## 360 ECD 0.995005462 2354 Extrapolation 2 6.0504874 5.57533009 ## qD.UCL ## 1 1.0246747 ## 10 69.0640403 ## 20 93.3390963 ## 30 110.3457193 ## 40 123.5728816 ## 41 1.0240569 ## 50 22.3547569 ## 60 22.9271581 ## 70 23.1931074 ## 80 23.3825320 ## 81 1.0231499 ## 90 15.0915310 ## 100 15.2023642 ## 110 15.2400497 ## 120 15.2609409 ## 121 1.0322459 ## 130 52.9088159 ## 140 64.2715468 ## 150 72.1016250 ## 160 76.9493881 ## 161 1.0307783 ## 170 14.2528514 ## 180 14.4612163 ## 190 14.5441802 ## 200 14.6024290 ## 201 1.0287570 ## 210 8.3283539 ## 220 8.3552612 ## 230 8.3642999 ## 240 8.3692845 ## 241 1.0463399 ## 250 48.9694604 ## 260 63.6214465 ## 270 81.4949067 ## 280 95.0378078 ## 281 1.0436728 ## 290 12.9512043 ## 300 13.3117696 ## 310 13.4905907 ## 320 13.5971759 ## 321 1.0401330 ## 330 6.4797466 ## 340 6.5100917 ## 350 6.5201787 ## 360 6.5256446 ## ## NOTE: The above output only shows five estimates for each assemblage; call iNEXT.object$iNextEst$coverage_based to view complete output. ## ## $AsyEst: asymptotic diversity estimates along with related statistics. ## Assemblage Diversity Observed Estimator s.e. LCL ## 1 ECB Species richness 78.0000000 111.1187097 18.90562416 78.0000000 ## 2 ECB Shannon diversity 21.7138324 22.4173559 0.66403430 21.1158726 ## 3 ECB Simpson diversity 14.5033077 14.6084583 0.40688587 13.8109766 ## 4 ECD Species richness 53.0000000 68.9864061 15.53738992 53.0000000 ## 5 ECD Shannon diversity 12.2769906 12.6730023 0.53296051 11.6284189 ## 6 ECD Simpson diversity 6.0375284 6.0635021 0.29097957 5.4931926 ## 7 ECI Species richness 57.0000000 64.5592248 10.07344392 57.0000000 ## 8 ECI Shannon diversity 13.7968750 14.0048088 0.37622759 13.2674163 ## 9 ECI Simpson diversity 7.8621150 7.8855602 0.24737392 7.4007162 ## UCL ## 1 148.1730522 ## 2 23.7188393 ## 3 15.4059399 ## 4 99.4391308 ## 5 13.7175857 ## 6 6.6338115 ## 7 84.3028121 ## 8 14.7422014 ## 9 8.3704042 plot_ec &lt;- ggiNEXT(inext_abundancia, type = 1, facet.var = &quot;Assemblage&quot;) + theme_classic(base_size = 10) + theme(legend.position = &quot;bottom&quot;) plot_ec Figura 12: Curvas de rarefacción por ensamble (estado de conservación) plot_orderq &lt;- ggiNEXT(inext_abundancia, type = 1, facet.var = &quot;Order.q&quot;) + theme_classic(base_size = 10) + theme(legend.position = &quot;bottom&quot;) plot_orderq Figura 13: Curvas de rarefacción por orden q NMDS (Escalado multi-dimensional no métrico) library(BiodiversityR) library(ggplot2) library(ggrepel) library(ggforce) library(concaveman) data(abundancia) data(ambiente) set.seed(19950922) resultado_nmds &lt;- metaMDS(abundancia$localidad, distance = &quot;bray&quot;, K = 2) ## Square root transformation ## Wisconsin double standardization ## Run 0 stress 0.15191508 ## Run 1 stress 0.17360063 ## Run 2 stress 0.17036563 ## Run 3 stress 0.18129005 ## Run 4 stress 0.24797212 ## Run 5 stress 0.18106207 ## Run 6 stress 0.2206524 ## Run 7 stress 0.17668312 ## Run 8 stress 0.19031998 ## Run 9 stress 0.22536858 ## Run 10 stress 0.17036561 ## Run 11 stress 0.14676403 ## ... New best solution ## ... Procrustes: rmse 0.22039157 max resid 0.51097837 ## Run 12 stress 0.15191508 ## Run 13 stress 0.25191103 ## Run 14 stress 0.17036563 ## Run 15 stress 0.1703656 ## Run 16 stress 0.17360063 ## Run 17 stress 0.23389998 ## Run 18 stress 0.21741609 ## Run 19 stress 0.17360063 ## Run 20 stress 0.29294975 ## *** Best solution was not repeated -- monoMDS stopping criteria: ## 12: stress ratio &gt; sratmax ## 8: scale factor of the gradient &lt; sfgrmin resultado_nmds$stress ## [1] 0.14676403 dist_sitios &lt;- vegdist(abundancia$localidad) anosim_sitios &lt;- anosim(dist_sitios, ambiente$estado_conservacion, distance = &quot;bray&quot;) summary(anosim_sitios) ## ## Call: ## anosim(x = dist_sitios, grouping = ambiente$estado_conservacion, distance = &quot;bray&quot;) ## Dissimilarity: bray ## ## ANOSIM statistic R: -0.15226 ## Significance: 0.795 ## ## Permutation: free ## Number of permutations: 999 ## ## Upper quantiles of permutations (null model): ## 90% 95% 97.5% 99% ## 0.251 0.342 0.401 0.507 ## ## Dissimilarity ranks between and within classes: ## 0% 25% 50% 75% 100% N ## Between 1 9.5 19 25.5 36 27 ## ECB 7 9.0 11 14.0 17 3 ## ECD 14 24.0 34 34.5 35 3 ## ECI 3 17.0 31 32.0 33 3 # Creamos un data.frame con los resultados puntos_nmds &lt;- as.data.frame(resultado_nmds$points) puntos_nmds$CONSERVACION &lt;- ambiente$estado_conservacion # Agregamos siglas para nombres de los sitios y guardamos el valor de stress puntos_nmds$SITIO &lt;- abbreviate(rownames(abundancia$localidad)) estres &lt;- sprintf(&quot;Stress = %s&quot;, round(resultado_nmds$stress, 2)) # Graficamos plot_nmds &lt;- ggplot(puntos_nmds, aes(x = MDS1, y = MDS2)) + ggtitle(&quot;NMDS&quot;) + geom_point(aes(shape = CONSERVACION), size = 3) + scale_shape_manual( name = &quot;&quot;, breaks = c(&quot;ECB&quot;, &quot;ECI&quot;, &quot;ECD&quot;), labels = c(&quot;Conservado&quot;, &quot;Intermedio&quot;, &quot;Degradado&quot;), values = c(15, 16, 17) ) + geom_mark_hull( aes(group = CONSERVACION, linetype = CONSERVACION), concavity = 10, radius = 0, expand = 0, show.legend = FALSE ) + scale_linetype_manual(values = c(&quot;solid&quot;, &quot;dashed&quot;, &quot;dotted&quot;)) + annotate(&quot;text&quot;, x = +Inf, y = +Inf, label = estres, hjust = 1, vjust = 1) + theme_classic() plot_nmds # Opcionalmente podemos añadir el nombre de los sitios plot_nmds + geom_text_repel( aes(label = SITIO), box.padding = 0.5, size = 3.5, colour = &quot;blue&quot;, ) "],["capítulo-8-evaluación-de-variables-ambientales.html", "Capítulo 8: Evaluación de variables ambientales Análisis de regresión Análisis de correlación Análisis de componentes principales (PCA) Análisis de correspondecia canónica (CCA) Test de Mantel en R", " Capítulo 8: Evaluación de variables ambientales Análisis de regresión data(moscas) modelo &lt;- lm(Div_Shan ~ IHH, data = moscas) summary(modelo) ## ## Call: ## lm(formula = Div_Shan ~ IHH, data = moscas) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.571036 -0.076726 0.038677 0.108453 0.252099 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.3213624 0.0842165 15.6901 2.109e-15 *** ## IHH -0.0064982 0.0020184 -3.2195 0.003241 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.18217 on 28 degrees of freedom ## Multiple R-squared: 0.27017, Adjusted R-squared: 0.24411 ## F-statistic: 10.365 on 1 and 28 DF, p-value: 0.0032408 plot(moscas$IHH, moscas$Div_Shan) abline(modelo, col = &quot;red&quot;) Figura 14: Modelo lineal con gráficos base library(ggplot2) ggplot(modelo$model, aes(x = IHH, y = Div_Shan)) + geom_ribbon( stat = &quot;smooth&quot;, method = &quot;lm&quot;, fill = &quot;grey90&quot; ) + geom_point(size = 2, color = &quot;blue&quot;) + geom_smooth( method = &quot;lm&quot;, color = &quot;black&quot;, linewidth = 1, lineend = &quot;round&quot;, se = FALSE ) + theme_classic() Figura 15: Modelo líneal usando ggplot Análisis de correlación data(moscas) matriz_cor &lt;- cor(moscas) matriz_cor ## IHH Riqueza Abund_log Div_Shan ## IHH 1.000000000 -0.074842989 0.845638906 -0.51978324 ## Riqueza -0.074842989 1.000000000 0.021460627 0.24598646 ## Abund_log 0.845638906 0.021460627 1.000000000 -0.41283679 ## Div_Shan -0.519783241 0.245986457 -0.412836788 1.00000000 library(corrplot) corrplot(matriz_cor, method = &quot;circle&quot;) corrplot(matriz_cor, method = &quot;color&quot;) Figura 16: Gráficos prueba de correlación resultado_prueba &lt;- cor.test(moscas$IHH, moscas$Div_Shan) resultado_prueba ## ## Pearson&#39;s product-moment correlation ## ## data: moscas$IHH and moscas$Div_Shan ## t = -3.21953, df = 28, p-value = 0.0032408 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## -0.74124543 -0.19626743 ## sample estimates: ## cor ## -0.51978324 Análisis de componentes principales (PCA) library(factoextra) data(moscas) datos_estandarizados &lt;- scale(moscas) pca &lt;- prcomp(datos_estandarizados, scale = TRUE) summary(pca) ## Importance of components: ## PC1 PC2 PC3 PC4 ## Standard deviation 1.49205 1.03842 0.74337 0.37799 ## Proportion of Variance 0.55655 0.26958 0.13815 0.03572 ## Cumulative Proportion 0.55655 0.82613 0.96428 1.00000 moscas$group &lt;- sub(&quot;.*_([BUG]).*&quot;, &quot;\\\\1&quot;, rownames(moscas)) moscas$group &lt;- ifelse( moscas$group == &quot;B&quot;, &quot;Bosque&quot;, ifelse(moscas$group == &quot;G&quot;, &quot;Pastizal&quot;, ifelse(moscas$group == &quot;U&quot;, &quot;Urbano&quot;, NA)) ) fviz_pca_biplot(pca, label = &quot;var&quot;, addEllipses = TRUE, ellipse.level = 0.95, habillage = moscas$group) datos_proyectados &lt;- predict(pca, newdata = datos_estandarizados) datos_proyectados ## PC1 PC2 PC3 PC4 ## SL_B1 -2.465815926 -0.082904652 -0.621213906 -0.519693940 ## SL_B2 -1.883548726 -0.092357350 -0.377571613 -0.099020053 ## SL_B3 -1.954558726 0.849625396 -0.064576061 -0.058657066 ## SL_B4 -2.230852812 -0.066628984 -0.563419748 -0.333227738 ## SL_B5 -1.402262235 -1.161632610 -0.275569270 0.056689477 ## SL_G1 -0.685126508 -0.230910722 0.345359120 0.510353557 ## SL_G2 -1.120142369 1.092403509 -0.251211010 0.600009129 ## SL_G3 -1.082375305 0.093368208 -0.461949177 0.487723428 ## SL_G4 -0.974323223 0.978648543 0.034481752 0.612707081 ## SL_G5 -1.651091280 -0.832952801 -1.053272444 -0.010437215 ## SL_U1 2.510094730 -0.487994288 -0.491244605 0.427312590 ## SL_U2 1.667196397 0.338253296 -0.242514144 -0.196687443 ## SL_U3 1.669893249 0.291578565 -0.147327866 -0.233526887 ## SL_U4 1.777633656 0.276265005 -0.074884799 -0.166970059 ## SL_U5 1.392947217 2.220736743 0.335466665 -0.214512197 ## O_B1 -0.212729057 -1.168479085 0.150127838 0.532988704 ## O_B2 0.059969748 -0.483402683 1.113886648 0.612618338 ## O_B3 -0.949735755 0.401246523 1.180480923 -0.085569584 ## O_B4 -0.635782772 -1.128991608 -0.092689358 0.254475746 ## O_B5 -1.300144275 0.859943945 0.120107234 0.038083733 ## O_G1 0.604811631 0.467494491 1.515094317 0.011912870 ## O_G2 0.306275512 0.481078448 1.372551680 -0.196504373 ## O_G3 1.199255739 -2.823814809 1.661880963 -0.215552785 ## O_G4 -0.491892717 -0.233297276 0.265222476 -0.687240020 ## O_G5 -0.701314612 -0.283843249 0.286404900 -0.883414620 ## O_U1 1.357202195 2.402277439 -0.044499890 -0.089813350 ## O_U2 1.514143771 0.600174724 -0.829858687 -0.091463491 ## O_U3 1.704964077 -1.410138755 -1.182175393 -0.241370325 ## O_U4 2.008583826 -0.429073121 -0.803521161 0.107221795 ## O_U5 1.968724551 -0.436672843 -0.803565388 0.071564702 Análisis de correspondecia canónica (CCA) library(BiodiversityR) library(ggplot2) data(abundancia) data(ambiente) resultado_cca &lt;- cca(abundancia$localidad ~ ., ambiente) summary(resultado_cca) ## ## Call: ## cca(formula = abundancia$localidad ~ estado_conservacion + ihh + t_min + t_max + t_med + hr_min + hr_max + hr_med + pp_14_dias_antes + pp_30_dias_antes + dist_al_rio, data = ambiente) ## ## Partitioning of scaled Chi-square: ## Inertia Proportion ## Total 2.352 1 ## Constrained 2.352 1 ## Unconstrained 0.000 0 ## ## Eigenvalues, and their contribution to the scaled Chi-square ## ## Importance of components: ## CCA1 CCA2 CCA3 CCA4 CCA5 CCA6 CCA7 ## Eigenvalue 0.51124 0.42762 0.36499 0.29458 0.26833 0.217375 0.149886 ## Proportion Explained 0.21736 0.18181 0.15518 0.12525 0.11409 0.092422 0.063727 ## Cumulative Proportion 0.21736 0.39918 0.55436 0.67961 0.79369 0.886116 0.949843 ## CCA8 ## Eigenvalue 0.117969 ## Proportion Explained 0.050157 ## Cumulative Proportion 1.000000 ## ## Accumulated constrained eigenvalues ## Importance of components: ## CCA1 CCA2 CCA3 CCA4 CCA5 CCA6 CCA7 ## Eigenvalue 0.51124 0.42762 0.36499 0.29458 0.26833 0.217375 0.149886 ## Proportion Explained 0.21736 0.18181 0.15518 0.12525 0.11409 0.092422 0.063727 ## Cumulative Proportion 0.21736 0.39918 0.55436 0.67961 0.79369 0.886116 0.949843 ## CCA8 ## Eigenvalue 0.117969 ## Proportion Explained 0.050157 ## Cumulative Proportion 1.000000 anova(resultado_cca) ## No residual component ## ## Model: cca(formula = abundancia$localidad ~ estado_conservacion + ihh + t_min + t_max + t_med + hr_min + hr_max + hr_med + pp_14_dias_antes + pp_30_dias_antes + dist_al_rio, data = ambiente) ## Df ChiSquare F Pr(&gt;F) ## Model 8 2.35199 ## Residual 0 0.00000 plot_cca &lt;- plot(resultado_cca) elipses_plot_cca &lt;- ordiellipse(resultado_cca, ambiente$estado_conservacion) # ---- Extracción de datos para graficar ---- sitios &lt;- sites.long(plot_cca) especies &lt;- species.long(plot_cca) multiplicador &lt;- attr(plot_cca$biplot, &quot;arrow.mul&quot;) vectores &lt;- data.frame(plot_cca$biplot * multiplicador, row.names(plot_cca$biplot)) colnames(vectores) &lt;- c(&quot;axis1&quot;, &quot;axis2&quot;, &quot;labels&quot;) elipses &lt;- ordiellipse.long(elipses_plot_cca) nombres_ejes &lt;- axis.long(resultado_cca) # ---- Gráfico ---- ggplot() + xlab(nombres_ejes[1, &quot;label&quot;]) + ylab(nombres_ejes[2, &quot;label&quot;]) + scale_x_continuous(expand = c(0.2, 0.2)) + geom_vline( xintercept = c(0), color = &quot;grey&quot;, linetype = 2, linewidth = 0.3 ) + geom_hline( yintercept = c(0), color = &quot;grey&quot;, linetype = 2, linewidth = 0.3 ) + geom_point( data = especies, aes(x = axis1, y = axis2), size = 1 ) + geom_path( data = elipses, aes(x = axis1, y = axis2, group = Grouping, color = Grouping) ) + scale_colour_manual( name = &quot;&quot;, breaks = c(&quot;ECB&quot;, &quot;ECI&quot;, &quot;ECD&quot;), labels = c(&quot;Conservado&quot;, &quot;Intermedio&quot;, &quot;Deteriorado&quot;), values = c(&quot;green&quot;, &quot;orange&quot;, &quot;red&quot;) ) + geom_segment( data = vectores, aes(x = 0, y = 0, xend = axis1, yend = axis2), linewidth = 0.4, color = &quot;blue&quot;, arrow = arrow(angle = 20, length = unit(1.5, &quot;mm&quot;), type = &quot;closed&quot;) ) + geom_label( data = vectores, aes(x = axis1, y = axis2, label = labels, hjust = &quot;outward&quot;, vjust = &quot;outward&quot;), fill = NA, label.size = NA, label.padding = unit(0.2, &quot;lines&quot;), color = &quot;blue&quot;, size = 3 ) + theme_classic() + theme(legend.position = &quot;top&quot;) Test de Mantel en R library(BiodiversityR) library(geosphere) data(abundancia) data(coords) dist_abundancia &lt;- vegdist(abundancia$localidad, method = &quot;bray&quot;) dist_geografica &lt;- as.dist(distm(coords, fun = distHaversine)) resultado_mantel &lt;- mantel(dist_abundancia, dist_geografica, method = &quot;pearson&quot;, permutations = 9999) resultado_mantel ## ## Mantel statistic based on Pearson&#39;s product-moment correlation ## ## Call: ## mantel(xdis = dist_abundancia, ydis = dist_geografica, method = &quot;pearson&quot;, permutations = 9999) ## ## Mantel statistic r: 0.10093 ## Significance: 0.2745 ## ## Upper quantiles of permutations (null model): ## 90% 95% 97.5% 99% ## 0.261 0.365 0.451 0.520 ## Permutation: free ## Number of permutations: 9999 plot(as.matrix(dist_geografica), as.matrix(dist_abundancia)) Figura 17: Gráfico de dispersión matrices de distancia "],["capítulo-9-modelado-nicho-ecológico.html", "Capítulo 9: Modelado nicho ecológico Descarga de datos Preparación de datos Construcción de elipsioides Proyección del modelo Gráficos", " Capítulo 9: Modelado nicho ecológico Descarga de datos # Variables ambientales mapas_worldclim &lt;- &quot;https://biogeo.ucdavis.edu/data/worldclim/v2.1/base/wc2.1_2.5m_bio.zip&quot; tmp &lt;- tempfile() download.file(mapas_worldclim, destfile = tmp) unzip(tmp, exdir = file.path(&quot;data/base/worldclim&quot;, bio_all)) unlink(tmp) # Shapefile neotropico tmp &lt;- tempfile() download.file( &quot;https://figshare.com/ndownloader/articles/3569361/versions/2&quot;, destfile = tmp ) unzip(tmp, exdir = &quot;data/base/mascara_neotropico&quot;) unlink(tmp) for(i in c(8, 9, 18, 19)) { path &lt;- file.path(&quot;./data/base/worldclim/bio_all&quot;, sprintf(&quot;wc2.1_2.5m_bio_%s.tif&quot;, i)) file.remove(path) } dir.create(&quot;./data/base/worldclim/bio_temp&quot;) dir.create(&quot;./data/base/worldclim/bio_prec/&quot;) for (i in c(1:11)) { if (i == 8 || i == 9) { next } path &lt;- file.path(&quot;./data/base/worldclim/bio_all&quot;, sprintf(&quot;wc2.1_2.5m_bio_%s.tif&quot;, i)) file.copy(from = path, to = &quot;./data/base/worldclim/bio_temp/&quot;) } for (i in c(12:17)) { path &lt;- file.path(&quot;./data/base/worldclim/bio_all&quot;, sprintf(&quot;wc2.1_2.5m_bio_%s.tif&quot;, i)) file.copy(from = path, to =&quot;./data/base/worldclim/bio_prec/&quot;) } Preparación de datos # ---- Librerias ---- library(raster) library(kuenm) # https://github.com/marlonecobos/kuenm library(ellipsenm) # https://github.com/marlonecobos/ellipsenm/ # ---- Cortado ---- cortar_mapas &lt;- function(entrada, shape, salida) { mapa &lt;- raster::stack(list.files(entrada, full.names = TRUE)) mapa &lt;- raster::mask(raster::crop(mapa, shape), shape) carpeta &lt;- dirname(salida) if (!file.exists(carpeta)) dir.create(carpeta, recursive = TRUE) terra::writeRaster(mapa, filename = salida, filetype = &quot;GTiff&quot;) } # ---- Limpieza ---- limpieza &lt;- function(datos, region, thin_dist) { dentro &lt;- data.frame( datos, inside = !is.na(raster::extract(region, datos[-1])) ) dentro &lt;- dentro[dentro$inside == TRUE, ][1:3] dentro &lt;- dentro[!is.na(dentro$Lat) &amp; !is.na(dentro$Long), ] unicos &lt;- unique(dentro) thin_data(unicos, longitude = &quot;Long&quot;, latitude = &quot;Lat&quot;, thin_distance = thin_dist) } # ---- Máscara ---- mascara &lt;- function(ocurrencias, variables, salida, distancia) { variables &lt;- raster::stack( list.files(file.path(variables, &quot;Initial&quot;), pattern = &quot;pc_&quot;, full.names = TRUE) ) buffer_oc &lt;- buffer_area( ocurrencias, longitude = &quot;Long&quot;, latitude = &quot;Lat&quot;, buffer_distance = distancia ) mascara &lt;- raster::mask(raster::crop(variables, buffer_oc), buffer_oc) dir.create(salida) raster::writeRaster(mascara, filename = file.path(salida, &quot;pc&quot;), format = &quot;ascii&quot;, bylayer = TRUE) } # ---- Cortado de mapas ---- neot_shape &lt;- shapefile(&quot;./data/base/mascara_neotropico/Lowenberg_Neto_2014.shp&quot;) cortar_mapas(&quot;./data/base/worldclim/bio_all/&quot;, neot_shape, &quot;./data/bio/bio_all.tif&quot;) cortar_mapas(&quot;./data/base/worldclim/bio_prec/&quot;, neot_shape, &quot;./data/bio/bio_prec.tif&quot;) cortar_mapas(&quot;./data/base/worldclim/bio_temp/&quot;, neot_shape, &quot;./data/bio/bio_temp.tif&quot;) # ---- Limpieza ocurrencias ---- # Carga de datos data(l_limpidus) data(c_fragans) region_neo &lt;- raster(&quot;./data/bio/bio_all.tif&quot;, lyrs = 1) plot(region_neo, col = &quot;grey70&quot;, legend = FALSE) # Limpieza oc_l_limpidus_neot &lt;- limpieza(l_limpidus[1:3], region_neo, 10) points(oc_l_limpidus_neot$Long, oc_l_limpidus_neot$Lat) write.csv(oc_l_limpidus_neot, file = &quot;data/ocurrencias/l_limpidus.csv&quot;) oc_c_fragrans_neot &lt;- limpieza(c_fragans, region_neo, 10) points(oc_c_fragrans_neot$Long, oc_c_fragrans_neot$Lat, col = &quot;seagreen&quot;) write.csv(oc_c_fragrans_neot, file = &quot;data/ocurrencias/c_fragrans_hp.csv&quot;) Figura 18: Ocurrencias de L. limpidus (negro) y C. fragrans (verde) en el neotrópico # ---- PCA ---- # Todas las variables kuenm_rpca( variables = raster::stack(&quot;./data/bio/bio_all.tif&quot;), var.scale = TRUE, write.result = TRUE, out.format = &quot;ascii&quot;, out.dir = &quot;./data/pcs_all&quot;, n.pcs = 3 ) # Temperatura kuenm_rpca( variables = raster::stack(&quot;./data/bio/bio_temp.tif&quot;), var.scale = TRUE, write.result = TRUE, out.format = &quot;ascii&quot;, out.dir = &quot;./data/pcs_temp&quot;, n.pcs = 3 ) # Precipitación kuenm_rpca( variables = raster::stack(&quot;./data/bio/bio_prec.tif&quot;), var.scale = TRUE, write.result = TRUE, out.format = &quot;ascii&quot;, out.dir = &quot;./data/pcs_prec&quot;, n.pcs = 3 ) # ---- Máscara ---- pcs &lt;- c(&quot;./data/pcs_all&quot;, &quot;./data/pcs_prec&quot;, &quot;./data/pcs_temp&quot;) for (carpeta in pcs) { salida &lt;- file.path(carpeta, &quot;l_limpidus&quot;) mascara(oc_l_limpidus_neot, carpeta, salida, 50) } for (carpeta in pcs) { salida &lt;- file.path(carpeta, &quot;c_fragrans&quot;) mascara(oc_c_fragrans_neot, carpeta, salida, 50) } Construcción de elipsioides # Definición funcion para leer los pcs generados anteriormente leer_pcs &lt;- function(carpeta, tipo = NULL) { carpetas &lt;- list.files(carpeta, full.names = TRUE) nombres &lt;- list.files(carpeta) raster_list &lt;- lapply(carpetas, function(x) { raster &lt;- raster::stack( list.files(x, pattern = &quot;pc_&quot;, full.names = TRUE) ) names(raster) &lt;- paste0(names(raster), tipo) raster }) names(raster_list) &lt;- nombres raster_list } #Definición función para calculo de elipses superposicion &lt;- function(ocs_hp, ocs_cb, vars_hp, vars_cb) { nicho_1 &lt;- overlap_object( ocs_hp, species = &quot;species&quot;, longitude = &quot;Long&quot;, latitude = &quot;Lat&quot;, method = &quot;covmat&quot;, level = 95, variables = vars_hp ) nicho_2 &lt;- overlap_object( ocs_cb, species = &quot;species&quot;, longitude = &quot;Long&quot;, latitude = &quot;Lat&quot;, method = &quot;covmat&quot;, level = 95, variables = vars_cb ) ellipsoid_overlap( nicho_1, nicho_2, overlap_type = &quot;back_union&quot;, significance_test = TRUE, replicates = 1000, confidence_limit = 0.05 ) } # ---- Elipsoides ---- # Variables pcs_all &lt;- leer_pcs(&quot;data/pcs_all/&quot;) pcs_prec &lt;- leer_pcs(&quot;data/pcs_prec/&quot;) pcs_temp &lt;- leer_pcs(&quot;data/pcs_temp/&quot;) # Superposición con prueba de significación overlap_all &lt;- superposicion( ocs_hp = oc_c_fragrans_neot, ocs_cb = oc_l_limpidus_neot, vars_hp = pcs_all$c_fragrans, vars_cb = pcs_all$l_limpidus ) overlap_prec &lt;- superposicion( ocs_hp = oc_c_fragrans_neot, ocs_cb = oc_l_limpidus_neot, vars_hp = pcs_prec$c_fragrans, vars_cb = pcs_prec$l_limpidus ) overlap_temp &lt;- superposicion( ocs_hp = oc_c_fragrans_neot, ocs_cb = oc_l_limpidus_neot, vars_hp = pcs_temp$c_fragrans, vars_cb = pcs_temp$l_limpidus ) dir.create(&quot;./output/overlaps&quot;, recursive = TRUE) saveRDS(overlap_all, &quot;./output/overlaps/overlap_all.rds&quot;) saveRDS(overlap_prec, &quot;./output/overlaps/overlap_prec.rds&quot;) saveRDS(overlap_temp, &quot;./output/overlaps/overlap_temp.rds&quot;) Proyección del modelo # ---- Carga de datos ---- # Se agraga un sufijo a cada capa del raster (_all, _prec, _temp) # dependiendo del conjunto de predictors climáticos. pcs_all &lt;- leer_pcs(&quot;./data/pcs_all&quot;, tipo = &quot;_all&quot;) pcs_prec &lt;- leer_pcs(&quot;./data/pcs_prec&quot;, tipo = &quot;_prec&quot;) pcs_temp &lt;- leer_pcs(&quot;./data/pcs_temp&quot;, tipo = &quot;_temp&quot;) # ---- Preparación para análisis ---- dir.create(&quot;./output/projection_model/splits&quot;, recursive = TRUE) data_split &lt;- split_data( oc_l_limpidus_neot, method = &quot;random&quot;, longitude = &quot;Long&quot;, latitude = &quot;Lat&quot;, train_proportion = 0.75, save = TRUE, name = &quot;./output/projection_model/splits/ocurrencias&quot; ) # Juntando las variables de cerambicido # para luego armar los sets vars_cerambicido &lt;- raster::stack( pcs_all$l_limpidus, pcs_prec$l_limpidus, pcs_temp$l_limpidus ) sets &lt;- list( set_1 = c(&quot;pc_1_all&quot;, &quot;pc_2_all&quot;, &quot;pc_3_all&quot;), set_2 = c(&quot;pc_1_prec&quot;, &quot;pc_2_prec&quot;, &quot;pc_3_prec&quot;), set_3 = c(&quot;pc_1_temp&quot;, &quot;pc_2_temp&quot;, &quot;pc_3_temp&quot;) ) sets_vars_cerambicido &lt;- prepare_sets(vars_cerambicido, sets) # ---- Calibracion ---- metodos &lt;- c(&quot;covmat&quot;, &quot;mve1&quot;) calibracion &lt;- ellipsoid_calibration( data_split, species = &quot;species&quot;, longitude = &quot;Long&quot;, latitude = &quot;Lat&quot;, variables = sets_vars_cerambicido, methods = metodos, level = 99, selection_criteria = &quot;S_OR_P&quot;, error = 5, iterations = 500, percentage = 50, output_directory = &quot;output/projection_model/calibration_pcs&quot; ) res_calibracion &lt;- read.csv( &quot;./output/projection_model/calibration_pcs/selected_parameterizations.csv&quot; ) res_calibracion # ---- Modelo ---- modelo &lt;- ellipsoid_model( data = oc_l_limpidus_neot, species = &quot;species&quot;, longitude = &quot;Long&quot;, latitude = &quot;Lat&quot;, raster_layers = pcs_all$Initial, method = &quot;mve1&quot;, level = 99, replicates = 10, prediction = &quot;suitability&quot;, return_numeric = TRUE, format = &quot;GTiff&quot;, overwrite = TRUE, output_directory = &quot;output/projection_model/model_pcs&quot; ) # Umbral del modelo modelo_mean &lt;- raster( &quot;./output/projection_model/model_pcs/mean_suitability_calibration_L_limpidus.tif&quot; ) # Threshold del 5% # Se tomó el valor más bajo recuperado y se utilizó para transformar el modelo en binario. puntos_cerambicido &lt;- extract(modelo_mean, oc_l_limpidus_neot[-1]) modelo_mean_binario &lt;- (modelo_mean &gt; min(puntos_cerambicido)) plot(modelo_mean_binario) writeRaster( modelo_mean_binario, &quot;./output/projection_model/final_model_thrs_5.tif&quot;, ) data(l_limpidus_nr) points(oc_l_limpidus_neot$Long, oc_l_limpidus_neot$Lat, col = &quot;black&quot;, cex = 0.3) points(l_limpidus_nr$Long, l_limpidus_nr$Lat, col = &quot;red&quot;, cex = 0.3) Figura 19: Modelo binario con ocurrencias de L. limpidus nativas (negro) y nuevos registros (rojo) # Crear tabla de especies alien y native de l_limpidus # ---- Ocurrencias con status ---- l_limpidus_nr$status &lt;- &quot;alien&quot; oc_l_limpidus_neot$status &lt;- &quot;native&quot; l_limpidus_status &lt;- rbind(oc_l_limpidus_neot, l_limpidus_nr) write.csv(l_limpidus_status, file = &quot;./data/ocurrencias/l_limpidus_status.csv&quot;, row.names = FALSE) # ---- Distancia Mahalanobis ---- cb_dist &lt;- data.frame( l_limpidus_status, dist = extract(modelo_mean, l_limpidus_status[2:3]) ) cb_dist &lt;- na.omit(cb_dist) write.csv(cb_dist, file = &quot;./output/dist_mahalanobis.csv&quot;) Gráficos # ---- Librerias ---- library(rgl) library(ggplot2) # ---Gráficos --- # Overlaps plot_over &lt;- function(overlap) { plot_overlap( overlap, niche_col = c(&quot;brown1&quot;, &quot;deepskyblue&quot;), data_col = c(&quot;brown1&quot;, &quot;deepskyblue&quot;), background = FALSE, change_labels = TRUE, xlab = &quot;&quot;, ylab = &quot;&quot;, zlab = &quot;&quot;, legend = TRUE ) } overlap_all &lt;- readRDS(&quot;../output/overlaps/overlap_all.rds&quot;) overlap_prec &lt;- readRDS(&quot;../output/overlaps/overlap_prec.rds&quot;) overlap_temp &lt;- readRDS(&quot;../output/overlaps/overlap_temp.rds&quot;) plot_over(overlap_all) plot_over(overlap_prec) plot_over(overlap_temp) # Histogramas # La función plot_hist crea gráficos usando R base. # La función gg_hist lo hace utilizando ggplot2 plot_hist &lt;- function(overlap) { hist(overlap@significance_results$union_random$Niche_1_vs_2$overlap, breaks = 5, main = &quot;Overlap HP x Cb&quot;, xlab = &quot;Overlap&quot;, xlim = c(0, 1), ylim = c(0, 650) ) abline(v = quantile(overlap@significance_results$union_random$Niche_1_vs_2$overlap, 0.05), col = &quot;red&quot;, lwd = 2, lty = 2 ) abline(v = overlap@union_overlap$overlap[1], col = &quot;lightblue&quot;, lwd = 2) legend(&quot;topright&quot;, bty = &quot;n&quot;, legend = c(&quot;Observed&quot;, &quot;5% CL&quot;), col = c(&quot;lightblue&quot;, &quot;red&quot;), lty = c(1, 2), lwd = 2 ) } plot_hist(overlap_all) plot_hist(overlap_prec) plot_hist(overlap_temp) gg_hist &lt;- function(overlap) { datos &lt;- data.frame( overlap = overlap@significance_results$union_random$Niche_1_vs_2$overlap ) observado &lt;- overlap@union_overlap$overlap cl &lt;- quantile(overlap@significance_results$union_random$Niche_1_vs_2$overlap, 0.05) plot &lt;- ggplot(datos) + ylab(&quot;Frequency&quot;) + geom_histogram(aes(x = overlap), bins = nclass.Sturges(datos[, 1]), color = &quot;black&quot;, fill = &quot;gray85&quot;) + geom_vline( aes(xintercept = cl, linetype = &quot;5% CL&quot;, color = &quot;5% CL&quot;) ) + geom_vline( aes(xintercept = observado, linetype = &quot;Observed&quot;, color = &quot;Observed&quot;) ) + scale_color_manual( name = &quot;&quot;, values = c(&quot;red&quot;, &quot;blue&quot;) ) + scale_linetype_manual( name = &quot;&quot;, values = c(&quot;dashed&quot;, &quot;solid&quot;) ) + theme_classic() plot } gg_hist(overlap_all) gg_hist(overlap_prec) gg_hist(overlap_temp) # Mahalanobis cb_dist &lt;- read.csv(&quot;../output/dist_mahalanobis.csv&quot;) hist(cb_dist$dist) abline(v = cb_dist$dist[cb_dist$status == &quot;alien&quot;], col = &quot;red&quot;, lwd = 1) maha_plot &lt;- ggplot(cb_dist, aes(x = dist)) + ylab(&quot;Frequency&quot;) + xlab(&quot;Distance&quot;) + geom_histogram(bins = nclass.Sturges(cb_dist $dist), color = &quot;black&quot;, fill = &quot;gray&quot;) + geom_vline(data = subset(cb_dist, status == &quot;alien&quot;), aes(xintercept = dist), color = &quot;red&quot;) + theme_classic() maha_plot "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
